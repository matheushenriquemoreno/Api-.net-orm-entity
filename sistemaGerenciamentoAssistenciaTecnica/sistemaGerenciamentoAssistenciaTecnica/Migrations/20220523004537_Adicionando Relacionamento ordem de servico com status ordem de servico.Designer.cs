// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using sistemaGerenciamentoAssistenciaTecnica.InfraEntity;

namespace sistemaGerenciamentoAssistenciaTecnica.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20220523004537_Adicionando Relacionamento ordem de servico com status ordem de servico")]
    partial class AdicionandoRelacionamentoordemdeservicocomstatusordemdeservico
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.5");

            modelBuilder.Entity("EspecialidadesTecnico", b =>
                {
                    b.Property<int>("EspecialidadesId")
                        .HasColumnType("int");

                    b.Property<int>("TecnicosEspecialidadeId")
                        .HasColumnType("int");

                    b.HasKey("EspecialidadesId", "TecnicosEspecialidadeId");

                    b.HasIndex("TecnicosEspecialidadeId");

                    b.ToTable("EspecialidadesTecnico");
                });

            modelBuilder.Entity("sistemaGerenciamentoAssistenciaTecnica.Model.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CPF")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.Property<string>("Telefone")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("sistemaGerenciamentoAssistenciaTecnica.Model.Equipamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<bool>("EhEquipamentoPersonalizado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Equipamentos");
                });

            modelBuilder.Entity("sistemaGerenciamentoAssistenciaTecnica.Model.EquipamentoCliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("ClienteId")
                        .HasColumnType("int");

                    b.Property<bool>("EhConfiguracaoPersonaliazada")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("EquipamentoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("EquipamentoId");

                    b.ToTable("EquipamentosClientes");
                });

            modelBuilder.Entity("sistemaGerenciamentoAssistenciaTecnica.Model.Especialidades", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<string>("NomeEspecialidade")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Especialidades");
                });

            modelBuilder.Entity("sistemaGerenciamentoAssistenciaTecnica.Model.OrdemServico", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("DefeitoApresentado")
                        .HasColumnType("text");

                    b.Property<string>("DescricaoServico")
                        .HasColumnType("text");

                    b.Property<int?>("EquipamentoClienteId")
                        .HasColumnType("int");

                    b.Property<bool>("FoiPrecisoInstalarPecas")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("IdStatusOrdemServico")
                        .HasColumnType("int");

                    b.Property<int?>("TecnicoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EquipamentoClienteId");

                    b.HasIndex("IdStatusOrdemServico")
                        .IsUnique();

                    b.HasIndex("TecnicoId");

                    b.ToTable("OrdemServicos");
                });

            modelBuilder.Entity("sistemaGerenciamentoAssistenciaTecnica.Model.StatusOrdemServico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Fim")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("Inicio")
                        .HasColumnType("datetime");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("StatusOrdems");
                });

            modelBuilder.Entity("sistemaGerenciamentoAssistenciaTecnica.Model.Tecnico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CPF")
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.Property<string>("Sexo")
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Telefone")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Tecnicos");
                });

            modelBuilder.Entity("EspecialidadesTecnico", b =>
                {
                    b.HasOne("sistemaGerenciamentoAssistenciaTecnica.Model.Especialidades", null)
                        .WithMany()
                        .HasForeignKey("EspecialidadesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("sistemaGerenciamentoAssistenciaTecnica.Model.Tecnico", null)
                        .WithMany()
                        .HasForeignKey("TecnicosEspecialidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("sistemaGerenciamentoAssistenciaTecnica.Model.EquipamentoCliente", b =>
                {
                    b.HasOne("sistemaGerenciamentoAssistenciaTecnica.Model.Cliente", "Cliente")
                        .WithMany("Equipamentos")
                        .HasForeignKey("ClienteId");

                    b.HasOne("sistemaGerenciamentoAssistenciaTecnica.Model.Equipamento", "Equipamento")
                        .WithMany("Clientes")
                        .HasForeignKey("EquipamentoId");

                    b.Navigation("Cliente");

                    b.Navigation("Equipamento");
                });

            modelBuilder.Entity("sistemaGerenciamentoAssistenciaTecnica.Model.OrdemServico", b =>
                {
                    b.HasOne("sistemaGerenciamentoAssistenciaTecnica.Model.EquipamentoCliente", "EquipamentoCliente")
                        .WithMany("OrdensServicos")
                        .HasForeignKey("EquipamentoClienteId");

                    b.HasOne("sistemaGerenciamentoAssistenciaTecnica.Model.StatusOrdemServico", "StatusDaOrdem")
                        .WithOne("Ordem")
                        .HasForeignKey("sistemaGerenciamentoAssistenciaTecnica.Model.OrdemServico", "IdStatusOrdemServico");

                    b.HasOne("sistemaGerenciamentoAssistenciaTecnica.Model.Tecnico", "Tecnico")
                        .WithMany("OrdensServicos")
                        .HasForeignKey("TecnicoId");

                    b.Navigation("EquipamentoCliente");

                    b.Navigation("StatusDaOrdem");

                    b.Navigation("Tecnico");
                });

            modelBuilder.Entity("sistemaGerenciamentoAssistenciaTecnica.Model.Cliente", b =>
                {
                    b.Navigation("Equipamentos");
                });

            modelBuilder.Entity("sistemaGerenciamentoAssistenciaTecnica.Model.Equipamento", b =>
                {
                    b.Navigation("Clientes");
                });

            modelBuilder.Entity("sistemaGerenciamentoAssistenciaTecnica.Model.EquipamentoCliente", b =>
                {
                    b.Navigation("OrdensServicos");
                });

            modelBuilder.Entity("sistemaGerenciamentoAssistenciaTecnica.Model.StatusOrdemServico", b =>
                {
                    b.Navigation("Ordem");
                });

            modelBuilder.Entity("sistemaGerenciamentoAssistenciaTecnica.Model.Tecnico", b =>
                {
                    b.Navigation("OrdensServicos");
                });
#pragma warning restore 612, 618
        }
    }
}
